{
 "className": "io.deephaven.modelfarm.fitterfarm.CoreFitData",
 "methods": {
  "getCarryCurveDates": "Gets an array of dates defining the cost-of-carry curve.\n\n:return: (io.deephaven.db.tables.utils.DBDateTime[]) array of dates defining the cost-of-carry curve.",
  "getCarryCurveErrors": "Gets an array of rate errors defining the cost-of-carry curve.\n\n:return: (double[]) array of rate errors defining the cost-of-carry curve.",
  "getCarryCurveRates": "Gets an array of rates defining the cost-of-carry curve.\n\n:return: (double[]) array of rates defining the cost-of-carry curve.",
  "getDivCashAmounts": "Gets an array of cash dividend values for the underlying security.\n\n:return: (double[]) array of cash dividend values for the underlying security.",
  "getDivExDates": "Gets an array of dividend ex-dates for the underlying security.\n\n:return: (io.deephaven.db.tables.utils.DBDateTime[]) array of dividend ex-dates for the underlying security.",
  "getDivProportionalAmounts": "Gets an array of proportional dividend values for the underlying security.\n\n:return: (double[]) array of proportional dividend values for the underlying security.",
  "getFitGroup": "Gets the grouping of the data snapshot.\n\n:return: (java.lang.String) grouping of the data snapshot.",
  "getFitScope": "Gets the scope indicating the extent of this data (e.g. underlying ID + fit group)\n\n:return: (io.deephaven.modelfarm.fitterfarm.FitScope) fit scope",
  "getOptionExerciseTypes": "Gets the type of option exercise (e.g. \"American\", \"European\", etc.) associated with the option prices.\n\n:return: (java.lang.String[]) type of option exercise (e.g. \"American\", \"European\", etc.) associated with the option prices.",
  "getOptionExpirations": "Gets an array of expirations associated with the option prices.\n\n:return: (io.deephaven.db.tables.utils.DBDateTime[]) array of expirations associated with the option prices.",
  "getOptionIds": "Gets an array of ids associated with the options.\n\n:return: (long[]) array of ids associated with the options.",
  "getOptionPayoffTypes": "Gets the type of option payoff (e.g. \"Put\", \"Call\", etc.) associated with the option prices.\n\n:return: (java.lang.String[]) type of option payoff (e.g. \"Put\", \"Call\", etc.) associated with the option prices.",
  "getOptionRoots": "Gets an array of root symbols associated with the options.\n\n:return: (java.lang.String[]) array of root symbols associated with the options.",
  "getOptionSettlementTypes": "Gets the type of option settlement (e.g. \"Cash\", \"Underlying\", etc.) associated with the option prices.\n\n:return: (java.lang.String[]) type of option settlement (e.g. \"Cash\", \"Underlying\", etc.) associated with the option prices.",
  "getOptionStrikes": "Gets an array of strikes associated with the option prices.\n\n:return: (double[]) array of strikes associated with the option prices.",
  "getOptionSyms": "Gets an array of symbols associated with the options.\n\n:return: (java.lang.String[]) array of symbols associated with the options.",
  "getTimestamp": "Gets the timestamp of the data snapshot.\n\n:return: (io.deephaven.db.tables.utils.DBDateTime) timestamp of the data snapshot.",
  "getUnderlyingId": "Gets the underlying id.\n\n:return: (long) underlying id.",
  "getUnderlyingSym": "Gets the underlying symbol.\n\n:return: (java.lang.String) underlying symbol.",
  "getUnderlyingType": "Gets the type of underlying (e.g. \"Equity\", \"Future\").\n\n:return: (java.lang.String) type of underlying (e.g. \"Equity\", \"Future\").",
  "getYieldCurveDates": "Gets an array of dates defining the yield curve.\n\n:return: (io.deephaven.db.tables.utils.DBDateTime[]) array of dates defining the yield curve.",
  "getYieldCurveRates": "Gets an array of rates defining the yield curve.\n\n:return: (double[]) array of rates defining the yield curve.",
  "setCarryCurveDates": "Sets an array of dates defining the cost-of-carry curve.\n\n:param carryCurveDates: (io.deephaven.db.tables.utils.DBDateTime[]) - array of dates defining the cost-of-carry curve.",
  "setCarryCurveErrors": "Sets an array of rate errors defining the cost-of-carry curve.\n\n:param carryCurveErrors: (double[]) - array of rate errors defining the cost-of-carry curve.",
  "setCarryCurveRates": "Sets an array of rates defining the cost-of-carry curve.\n\n:param carryCurveRates: (double[]) - array of rates defining the cost-of-carry curve.",
  "setDivCashAmounts": "Sets an array of cash dividend values for the underlying security.\n\n:param divCashAmounts: (double[]) - array of cash dividend values for the underlying security.",
  "setDivExDates": "Sets an array of dividend ex-dates for the underlying security.\n\n:param divExDates: (io.deephaven.db.tables.utils.DBDateTime[]) - array of dividend ex-dates for the underlying security.",
  "setDivProportionalAmounts": "Sets an array of proportional dividend values for the underlying security.\n\n:param divProportionalAmounts: (double[]) - array of proportinoal dividend values for the underlying security.",
  "setFitGroup": "Set the grouping of the data snapshot.\n\n:param fitGroup: (java.lang.String) - grouping of the data snapshot.",
  "setOptionExerciseTypes": "Sets the type of option exercise (e.g. \"American\", \"European\", etc.) associated with the option prices.\n\n:param optionExerciseTypes: (java.lang.String[]) - type of option exercise (e.g. \"American\", \"European\", etc.) associated with the option prices.",
  "setOptionExpirations": "Sets the expirations associated with the option prices.\n\n:param optionExpirations: (io.deephaven.db.tables.utils.DBDateTime[]) - expirations associated with the option prices.",
  "setOptionIds": "Sets an array of ids associated with the options.\n\n:param optionIds: (long[]) - array of ids associated with the options.",
  "setOptionPayoffTypes": "Sets the type of option payoff (e.g. \"Put\", \"Call\", etc.) associated with the option prices.\n\n:param optionPayoffTypes: (java.lang.String[]) - type of option payoff (e.g. \"Put\", \"Call\", etc.) associated with the option prices.",
  "setOptionRoots": "Sets an array of root symbols associated with the options.\n\n:param optionRoots: (java.lang.String[]) - array of root symbols associated with the options.",
  "setOptionSettlementTypes": "Sets the type of option settlement (e.g. \"Cash\", \"Underlying\", etc.) associated with the option prices.\n\n:param optionSettlementTypes: (java.lang.String[]) - type of option settlement (e.g. \"Cash\", \"Underlying\", etc.) associated with the option prices.",
  "setOptionStrikes": "Sets an array of strikes associated with the option prices.\n\n:param optionStrikes: (double[]) - array of strikes associated with the option prices.",
  "setOptionSyms": "Sets an array of symbols associated with the options.\n\n:param optionSyms: (java.lang.String[]) - array of symbols associated with the options.",
  "setTimestamp": "Set the timestamp of the data snapshot.\n\n:param timestamp: (io.deephaven.db.tables.utils.DBDateTime) - timestamp of the data snapshot.",
  "setUnderlyingId": "Set the underlying id.\n\n:param underlyingId: (long) - underlying id.",
  "setUnderlyingSym": "Set the underlying symbol.\n\n:param usym: (java.lang.String) - underlying symbol.",
  "setUnderlyingType": "Sets the type of underlying (e.g. \"Equity\", \"Future\").\n\n:param underlyingType: (java.lang.String) - type of underlying (e.g. \"Equity\", \"Future\").",
  "setYieldCurveDates": "Sets an array of dates defining the yield curve.\n\n:param yieldCurveDates: (io.deephaven.db.tables.utils.DBDateTime[]) - array of dates defining the yield curve.",
  "setYieldCurveRates": "Sets an array of rates defining the yield curve.\n\n:param yieldCurveRates: (double[]) - array of rates defining the yield curve.",
  "toString": ":return: java.lang.String"
 },
 "path": "io.deephaven.modelfarm.fitterfarm.CoreFitData",
 "text": "A snapshot of market data needed to fit an equity option model.",
 "typeName": "class"
}