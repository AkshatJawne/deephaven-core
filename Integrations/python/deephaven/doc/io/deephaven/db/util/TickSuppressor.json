{
 "className": "io.deephaven.db.util.TickSuppressor",
 "methods": {
  "convertModificationsToAddsAndRemoves": "For shift aware listeners, the modified column set cannot mark particular rows and columns dirty; only all of the\n columns in the modified rows.  However, rows can be both removed and added and those rows do not affect the\n modified column set.\n\n If you have a table that has a small number of modified rows with many modified columns;\n and join on a right-hand side that modifies many rows, but few columns; downstream operations must treat all rows\n and columns in the cross product as modified.\nThis utility function will convert all modified rows to added and removed rows, such that downstream operations\n can modify rows without additionally marking the columns of this table dirty.\n\n:param input: (io.deephaven.db.tables.Table) - an input table\n:return: (io.deephaven.db.tables.Table) an output table that will produce no modified rows, but rather adds and removes instead",
  "removeSpuriousModifications": "Removes spurious modifications from an update.\n\n The Deephaven query engine guarantees that any row or column that has been modified, must be marked modified in\n an update.  However, for efficiency, it does not guarantee that only rows with changed data are marked as\n modified.  There are cases where a query writer would like to remove spurious modifications.  For example if\n a downstream listener is sending network messages eliminating additional messages may be worthwhile.\nThis function produces a new query table with the same contents as the original query table.  For each\n modified row and column, if a row has not actually been modified or a column has no modifications; then remove\n the modification from the downstream update.\n\n:param input: (io.deephaven.db.tables.Table) - an input table\n:return: (io.deephaven.db.tables.Table) an output table where the set of modified rows and columns is restricted to cells where current and\n previous values are not identical"
 },
 "path": "io.deephaven.db.util.TickSuppressor",
 "text": "Tools for reducing the number of ticks generated by a table.",
 "typeName": "class"
}